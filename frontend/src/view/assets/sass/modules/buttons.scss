/*doc
---
title: Buttons
name: buttons
category: Components - Buttons
---

Button styles should be applied to an `<a>` or `<button>` element.

If your button is actually a link to another page, please use the `<a>` element, while if your button performs an action, such as
submitting a form or triggering some javascript event, then use a `<button>` element.

*/

/*doc
---
title: Button Variants
name: buttons_01_variants
parent: buttons
---

Button                                              | Class               | Description
--------------------------------------------------- | ------------------- | -----------
<button class="btn">Default</button>   | `btn`  | This is what buttons look like, this is the go to button style.
<button class="btn btn-primary">Primary</button>   | `btn btn-primary`  | Use this button as the primary action
<button class="btn btn-secondary">Secondary</button>     | `btn btn-secondary`   |
<button class="btn btn-inverse">Inverse</button> | `btn btn-inverse` |
<button class="btn btn-success">Success</button>           | `btn btn-success`        |
<button class="btn btn-info">Info</button>           | `btn btn-info`        |
<button class="btn btn-warning">Warning</button>           | `btn btn-warning`        |
<button class="btn btn-alert">Alert</button>           | `btn btn-alert`        |

*/

/*doc
---
title: Button Sizes
name: buttons_02_sizes
parent: buttons
---

Size modifiers can be applied to any `.btn`

```htmlexample
<button class="btn btn-primary">default primary button</button>
<button class="btn btn-primary btn-regular">regular primary button</button>
<button class="btn btn-primary btn-large">large primary button</button>
```

A special case is the `.btn-block` modifier which can be applied to any `.btn` in any size to make it occupy the full available width and act like a block element.

Multiple block level buttons below each other will be vertically spaced.

```htmlexample
<button class="btn btn-primary btn-block">default block level button</button>
<button class="btn btn-primary btn-regular btn-block">regular block level button</button>
<button class="btn btn-primary btn-large btn-block">large block level button</button>
```
*/

/*doc
---
title: Buttons with icons
name: buttons_03_icons
parent: buttons
---

Icons in buttons can be used in any combination of icon/text order.
For optimal spacing this requires a consistent markup, whereas the text content of a button has to be placed within `<span class="text">`

```htmlexample
<button class="btn btn-primary btn-regular">
    <i class="icon icon-angle-left"></i>
    <span class="text">button with icons</span>
    <i class="icon icon-angle-right"></i>
</button>

```

For vertically aligned icons in buttons, use the `.btn-vertical` modifier

```htmlexample
<button class="btn btn-primary btn-regular btn-vertical">
    <i class="icon icon-angle-up"></i>
    <span class="text">vertical button</span>
    <i class="icon icon-angle-down"></i>
</button>
```
*/

/*doc
---
title: Special Buttons
name: buttons_04_special
parent: buttons
---

Make a button look and behave like a link with `.btn-link`.

```htmlexample
<button class="btn btn-link">Link button</button>
```
*/

/*doc
---
title: Button groups
name: buttons_05_groups
parent: buttons
---

For optimal spacing between multiple horizontal `.btn`s, they can be nested inside a `.btn-group`.


```htmlexample
<div class="btn-group">
    <button class="btn btn-primary btn-regular">button</button>
    <button class="btn btn-primary btn-regular">button</button>
    <button class="btn btn-primary btn-regular">button</button>
</div>
```
*/


.btn {
  display: inline-block;
  margin-bottom: 0; // For input.btn

  text-align: center;
  vertical-align: middle;
  cursor: pointer;

  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  border-radius: 1px;

  white-space: nowrap;

  font-size: 13px;
  line-height: 18px;

  @include user-select(none);

  &:hover,
  &:focus {
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
    pointer-events: none;
    @include opacity(.65);
  }

  @include button-variant($c-gray-55, $c-transparent, $c-gray-11);
  @include content-spacing();
}

body.dark-theme .btn {
  @include button-variant($c-white, $c-transparent, $c-dt-border);
}

// Alternate buttons
// --------------------------------------------------
// button-variant(color, background-color, border-color: transparent)
.btn-primary {
  @include button-variant($c-white, $c-blue-27);
}

body.dark-theme .btn-primary {
  @include button-variant($c-dt-primary-text, $c-dt-btn-primary);
}

.btn-secondary {
  @include button-variant($c-white, $c-blue-56);
}

body.dark-theme .btn-secondary {
  @include button-variant($c-dt-btn-secondary-text, $c-dt-btn-secondary);
}

.btn-inverse {
  @include button-variant($c-blue-27, $c-white);
}

body.dark-theme .btn-inverse {
  @include button-variant($c-dt-btn-primary, $c-dt-primary-text);
}

// contextual variants
@each $conf in $states {
  $state: nth($conf, 1);
  $color: nth($conf, 2);

  body.dark-theme .btn-#{$state}, .btn-#{$state} {
    @include button-variant($c-white, $color);
  }
}

.btn-toggle {
  color: $c-white;
  background-color: $c-gray-44;
  border-color: $c-gray-44;

  &:hover, &:active, &.is-active {
    color: $c-white;
    background-color: $c-blue-27;
    border-color: $c-blue-27;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.is-active {
      color: $c-white;
      background-color: $c-gray-44;
      border-color: $c-gray-44;
    }
  }

}

// Button Sizes
// --------------------------------------------------
// button-size(padding-vertical, padding-horizontal, font-size, line-height, border-radius: 2px)


// .btn-small {
//   @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $border-radius-small);
// }

.btn-regular {
  @include button-size(5px, 10px, 13px, 18px);
}

.btn-large {
  @include button-size(10px, 10px, 13px, 18px);
}

// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.btn-vertical {
  text-align: center;

  .icon, .text {
    display: block;
  }

  @include content-spacing($orientation: vertical);
}

.btn-link {
  color: $c-blue-27;
  font-weight: normal;
  cursor: pointer;
  border-radius: 0;

  &,
  &:active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: $c-blue-27;
    text-decoration: underline;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: $c-gray-20;
      text-decoration: none;
    }
  }
}

.btn-link-light {
  color: white;
  font-weight: normal;
  cursor: pointer;
  border-radius: 0;

  &,
  &:active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:focus {
    color: white;
    text-decoration: none;
    background-color: transparent;
  }
  &:hover {
    color: white;
    text-decoration: underline;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: white;
      text-decoration: none;
    }
  }
}

.btn-filter {
  padding: 3px 7px;
  border-radius: 1px;

  border-color: transparent;

  &:hover,
  &:active,
  &.is-active,
  .open > &.dropdown-toggle {
    color: $c-white;
    background-color: $c-blue-27;
    border-color: transparent;
  }

  .filter-active > & {
    color: $c-white;
    background-color: #64a70b;
    border-color: transparent;
  }
}

body.dark-theme {
  .filter-active {
    .btn-filter {
      @include button-variant($c-white, #64a70b, transparent, false);
    }
  }
}

.btn-upload {
  position: relative;
  overflow: hidden;
  cursor: pointer;

  input[type="file"] {
    position: absolute;
    top: 0; right: 0;
    margin: 0; padding: 0;
    font-size: 100px;

    @include opacity(0);
  }
}

.btn-group {
  .btn + .btn {
    margin-left: 5px;
  }
}
