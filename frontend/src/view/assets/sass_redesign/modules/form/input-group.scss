/*doc
---
title: Input group
name: input_group
category: Components - Input group
---

With `.input-group` text, buttons, or other custom inputs can be combined together with no breaks.

```htmlexample
<div class="d-flex flex-column gap-2">
    <div class="input-group">
        <span class="input-group-text">Default</span>
        <input type="text" class="form-control" value="text">
    </div>

    <div class="input-group flex-nowrap">
        <span class="input-group-text input-group-text--left-aligned">Default</span>
        <span class="input-group-text text-truncate">Very loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong text</span>
    </div>

    <div class="input-group">
        <select class="form-control js-select">
          <option>ftp://</option>
          <option>sftp://</option>
        </select>
        <input type="text" class="form-control" value="127.0.0.1">
    </div>

    <div class="input-group">
        <input type="text" class="form-control" value="">
        <button class="btn btn-icon btn-primary">
          <i class="icon icon-plus"></i>
        </button>
    </div>
</div>
```

Use `.input-groups` in order to create `.input-group` stack.

```htmlexample
<div class="input-groups">
    <div class="input-group">
        <span class="input-group-text">Default</span>
        <input type="text" class="form-control" value="text">
    </div>
    <div class="input-group">
        <span class="input-group-text input-group-text--dark">Dark background</span>
        <input type="text" class="form-control" value="text">
    </div>
    <div class="input-group">
        <span class="input-group-text disabled">Disabled</span>
        <input type="text" class="form-control" value="text" disabled="">
    </div>
    <div class="input-group">
        <span class="input-group-text input-group-text--disabled fw-semibold">Disabled and bold text</span>
        <input type="text" class="form-control fw-semibold" value="text" disabled="">
    </div>
    <div class="input-group">
        <span class="input-group-text active fw-semibold">Active</span>
        <input type="text" class="form-control" value="text">
    </div>
</div>
```

*/

.input-group {
  --input-group-text-bg: #{$gray-100};
  --input-group-text-color: #{$black};
  --input-group-active-bg: #{$blue-var};
  --input-group-active-color: #{$white};
}

@include color-mode(dark) {
  .input-group {
    --input-group-text-color: #{$dark-grey};
  }
}

@include color-mode(light-contrast) {
  .input-group {
    --input-group-text-bg: #{$con-grey};
    --input-group-text-color: #{$con-dark-blue};
    --input-group-active-bg: #{$con-dark-blue};
    --input-group-active-color: #{$white};
  }
}

@include color-mode(dark-contrast) {
  .input-group {
    --input-group-text-bg: #{$dark-grey};
    --input-group-text-color: #{$white};
    --input-group-active-bg: #{$white};
    --input-group-active-color: #{$con-dark-blue};
  }
}

.input-group-text {
  height: $input-height;
  background-color: var(--input-group-text-bg);
  color: var(--input-group-text-color);

  &.text-truncate {
    display: block !important;
  }

  &.active {
    background-color: var(--input-group-active-bg);
    border-color: var(--input-group-active-bg);
    color: var(--input-group-active-color) !important;
    font-weight: $font-weight-semibold;
  }
}

.input-group-text--left-aligned {
  display: block !important;
  text-align: left;
}

.input-group-text--dark {
  background: $dark-grey;
  color: $white;
  border-color: $dark-grey;
  font-weight: $font-weight-semibold;
}

.input-group-text--disabled, .input-group-text.disabled {
  --input-group-text-color: var(--base-disabled-color);
  --input-group-text-bg: var(--base-disabled-bg);

  border-color: $border-color-var;
  font-weight: $font-weight-normal;
}

.input-groups {
  display: grid;
  grid-template-columns: min-content 1fr;
  row-gap: $gap-sm;

  &--md {
    row-gap: $gap-md;
  }

  .input-group {
    display: contents;

    .input-group-text {
      @include flex-center;
    }

    .form-control {
      width: auto;
    }
  }
}

.input-group {
  --input-group-select2-dropdown-bg: var(--bs-gray-200);
  --input-group-select2-selection-color: #{$dark-grey};

  > .btn:first-child {
    font-weight: $font-weight-normal;
    padding: $gap-x-sm $gap-sm - 1;
  }

  > .select2-container {
    &:nth-child(2) {
      flex-grow: 0;

      --select-dropdown-bg: var(--input-group-select2-dropdown-bg);
      --select2-selection-color: var(--input-group-select2-selection-color);
      --select2-icon-color: var(--select2-selection-color);

      .select2-selection.form-control.select2-selection--single {
        @include border-end-radius(0);
      }
    }

    // in the middle
    &:not(:nth-child(2)):not(:last-child) {
      .select2-selection.form-control.select2-selection--single {
        border-radius: 0;
      }
    }

    &:last-child {
      .select2-selection.form-control.select2-selection--single {
        @include border-start-radius(0);
      }
    }
  }
}

@include color-mode(light-contrast) {
  .input-group {
    --input-group-select2-dropdown-bg: #{$con-grey};
    --input-group-select2-selection-color: #{$con-dark-blue};
  }
}

@include color-mode(dark-contrast) {
  .input-group {
    --input-group-select2-selection-color: #{$con-dark-blue};
  }
}

// input group validation (rewrite of some bootstrap styles)
.input-group.has-feedback {
  > .btn:first-child {
    @include border-bottom-radius(0 !important);
  }
  > .form-control {
    border-top-right-radius: $border-radius !important;
  }

  > .form-control-feedback-message:last-child {
    @include border-bottom-radius($border-radius !important);
    margin-left: 0 !important;
    width: 100%;
  }
}

.input-group:has(.select2-container:nth-child(3)) {
  overflow: hidden;
}
