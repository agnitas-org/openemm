
/*doc
---
title: Notifications
name: notifications
category: Components - Notifications
---

Notifications are the text blocks with the border and with icon in some cases.

*/

/*doc
---
title: Basic Example
name: notifications_01_example
parent: notifications
---

```htmlexample
<div class="notification-simple">
  <i class="icon icon-info-circle"></i>
  <span>Some notification text!</span>
</div>
```
*/

/*doc
---
title: States
name: notifications_02_states
parent: notifications
---

Notifications support the full range of state variants, namely as `.notification-success`, `.notification-info`, `.notification-warning` and `.notification-alert` respectively.

Please note that depending on the state, the state icon has to be adjusted accordingly, it does not get placed automatically when placing notifications into the content directly.

```htmlexample
<div class="notification-simple notification-simple--success">
  <i class="icon icon-info-circle"></i>
  <span>Some notification text!</span>
</div>

<div class="notification-simple notification-simple--info">
  <i class="icon icon-info-circle"></i>
  <span>Some notification text!</span>
</div>

<div class="notification-simple notification-simple--warning">
  <i class="icon icon-info-circle"></i>
  <span>Some notification text!</span>
</div>

<div class="notification-simple notification-simple--alert">
  <i class="icon icon-info-circle"></i>
  <span>Some notification text!</span>
</div>
```

There is larger variant of notification. You should just add the class `.notification-simple--lg`.
This variant has another paddings and text doesn't truncate inside it.

```htmlexample
<div class="notification-simple notification-simple--lg">
  <i class="icon icon-info-circle"></i>
  <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta fuga modi nisi, nobis non numquam odio perspiciatis quaerat repudiandae veritatis vitae, voluptatibus. Esse eum ipsam, obcaecati officia officiis possimus voluptate?</span>
</div>
```
*/

$notification-header-height: 30px;
$popup-width: 435px;
$popup-width-mobile: 61px;
$popups-width: $popup-width + $gap-sm * 2;

:root {
  --popup-width: #{$popup-width};
  --popup-width-mobile: #{$popup-width-mobile - 2px};
}

.notification-simple {
  --notification-simple-color: #{$gray-600};

  width: 100%;
  padding: $gap-x-sm $gap-sm;
  overflow: hidden;

  display: flex;
  flex-shrink: 0;
  gap: $gap-sm;
  align-items: center;

  border: $border-default;
  border-radius: $border-radius;
  color: var(--notification-simple-color);

  span {
    @extend .text-truncate;
  }

  a {
    font-weight: $font-weight-semibold;
    color: var(--text-link-color);
  }
}

@include color-mode(dark) {
  .notification-simple {
    --notification-simple-color: #{$light-grey};
  }
}

@include color-mode(light-contrast) {
  .notification-simple {
    --notification-simple-color: #{$border-color-var};
  }
}

@include color-mode(dark-contrast) {
  .notification-simple {
    --notification-simple-color: #{$white};
  }
}

.notification-simple--lg {
  padding: $gap-sm - 1px;

  span {
    white-space: initial;
  }
}

@mixin collapsed-popup() {
  width: $popup-width-mobile;
  overflow: hidden;
  .popup-tabs,
  .popup-content,
  .popup-header-title,
  .close-icon,
  .arrow {
    display: none;
  }
}

#popups {
  display: flex;
  flex-direction: column;
  align-items: end;
  gap: $gap-md;
  padding: $gap-sm;

  position: fixed;
  z-index: 999999;
  width: $popups-width;

  @include mobile {
    gap: $gap-sm;
    width: 100%;
    max-width: $popups-width;
  }
}

.popup {
  --popup-content-bg: #{$white};
  --popup-header-color: #{$white};
  --popup-header-bg: transparent;
  --popup-border-color: transparent;

  border-radius: $border-radius;
  border: 1px solid var(--popup-border-color);

  width: 100%;
  position: relative;
  overflow: hidden;

  .popup-header {
    @include font($font-size-md);
    display: flex;
    align-items: center;
    line-height: 100%;
    height: $notification-header-height;
    padding-inline: $gap-sm;

    color: var(--popup-header-color);
    background-color: var(--popup-header-bg);

    @include desktop {
      .icon-caret-left {
        display: none;
      }
    }
  }

  .popup-content {
    background-color: var(--popup-content-bg);
    color: $body-color-var;
    padding: $gap-sm;

    border-top: 1px solid var(--popup-border-color);

    @include border-bottom-radius;

    a {
      color: var(--text-link-color);
    }
  }

  .close-icon {
    cursor: pointer;
    &:hover, &:focus {
      opacity: 0.8;
    }
  }

  .popup-tabs {
    display: none;
  }

  &.has-tabs {
    .popup-header-icon {
      display: none;
    }

    @include mobile {
      &:not(.expanded) {
        .popup-header-icon {
          display: block;
        }
      }
    }

    .popup-tabs {
      padding: 0;
      display: flex;
    }

    .arrow {
      position: absolute;
      height: $notification-header-height;

      &-left {
        top: 0;
        left: 0;
      }

      &-right {
        top: 0;
        right: 0;
      }
    }
  }

  &:not(.has-carousel) {
    .arrow {
      display: none;
    }
  }

  &.has-carousel {
    .popup-tabs {
      display: inline-flex;
      transition: 0.2s ease-in-out;

      .popup-tab {
        flex-grow: 0;
      }
    }
  }

  .popup-tab {
    // width: controlled with JS;
    cursor: pointer;
    height: 100%;
    @include flex-center;
    flex-grow: 1;

    color: var(--popup-header-color);
    background-color: var(--popup-header-bg);

    &.active {
      @include border-top-radius;
    }

    &:not(.active) {
      filter: brightness(80%);

      &:not(:last-child) {
        border-right: 1px solid var(--popup-header-color);
      }
    }
  }

  &.expanded {
    .icon-caret-left {
      transform: rotate(180deg);
    }
  }

  @include mobile {
    &:not(.expanded) {
      @include collapsed-popup;
    }
  }
}

.popups-bottom-right {
  right: 0;
  bottom: 0;
}

@include color-mode(dark) {
  .popup {
    --popup-content-bg: #{$grey-blue};
  }
}

@include color-mode(dark-contrast) {
  .popup {
    --popup-header-color: #{$con-dark-blue};
    --popup-content-bg: #{$con-dark-blue};
  }
}

@include color-mode(light-contrast) {
  .popup {
    --popup-header-color: #{$con-dark-blue};
    --popup-border-color: #{$border-color-var} !important;
  }
}

@mixin notification-simple-variant($state, $color) {
  .notification-simple--#{$state} {
    color: $color;
    border-color: $color;
  }
}

@mixin popup-variant($state, $color) {
  .popup-#{$state} {
    --popup-border-color: #{$color};
    --popup-header-bg: #{$color};
  }
}

@each $conf in $states {
  $state: nth($conf, 1);
  $color: nth($conf, 2);

  @include popup-variant($state, $color);
  @include notification-simple-variant($state, $color);
}
