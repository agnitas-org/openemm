
$table-spacing: 10px;
$table-header-height: 34px;
$table-row-height: 56px;
$max-preview-width: 300px;
$table-control-radius: $border-radius-sm;

@mixin sortable-link($icon) {
  > a::before, > span > a::before {
    @include fa-content($icon);
    margin-right: $table-spacing / 2;
  }
}

@mixin flex-table() {
  @include flex-column;

  thead {
    tr {
      display: flex;
      justify-content: space-between;
    }

    th {
      --table-fit-content-col-width: unset;
      flex-grow: 1;

      &.sortable {
        display: flex;

        > a {
          flex-grow: 1;
          @include text-truncate;
        }
      }

      &.columns-picker {
        &:has(> .hidden) {
          display: none;
        }

        flex: none;
        padding-top: 7px;
        padding-bottom: 0;
      }

      &:has(> input[type="checkbox"]) {
        flex: none;
      }
    }
  }

  tbody {
    tr {
      height: auto;
      @include flex-wrap;
      align-items: center;
      gap: $table-spacing / 2;
      row-gap: $table-spacing;

      padding: $table-spacing / 2 $table-spacing;
      overflow: hidden;

      &:not(.empty):hover {
        td {
          box-shadow: none;
        }
      }

      border-color: transparent;
    }

    tr.empty > td {
      width: 100%;
    }

    td {
      padding: 0;

      @include flex-row($table-spacing / 2);
      align-items: center;
    }
  }

  &:not(.no-truncate) {
    .fluid-cell {
      min-width: 0;
      flex: 1;

      span {
        display: inline !important;
        @include text-truncate;
      }
    }
  }

  &.no-truncate {
    .fluid-cell {
      order: 2;
      width: 100%;
    }
  }

  .table-actions {
    width: auto;

    div {
      gap: $table-spacing / 2;
    }
  }

  .secondary-cell {
    order: 2;
    width: 100%;
    color: var(--table-secondary-cell-text-color);

    > .icon {
      display: initial;
    }
  }
}

.table--borderless {
  width: 100%;
  margin: 0;
  border-collapse: separate;
  border-spacing: 0;
  color: $body-color-var;

  tbody tr {
    height: $table-row-height;
  }

  @include mobile {
    @include flex-table;
  }

  thead {
    position: sticky;
    top: 0;
    z-index: 1;
  }

  td {
    color: var(--table-body-color);
    background: transparent;
    padding-block: $table-spacing / 2;
    padding-inline: $table-spacing;
    vertical-align: middle;
    border: none;
    overflow-wrap: anywhere;
    overflow: hidden;

    &:has(input[type="checkbox"]) {
      text-align: center;
    }

    @include mobile { // prevent table row click on mobile
      a {
        pointer-events: none;
        cursor: default;
      }
    }
  }

  th {
    --table-fit-content-col-width: 0px;
    --table-separator-width: 1px;

    @extend .text-truncate;
    background-color: transparent;
    position: relative;
    padding: $table-spacing / 2 calc($table-spacing + var(--table-separator-width)) $table-spacing $table-spacing;
    border: none;
    user-select: none;

    color: var(--table-head-text-color);
    font-weight: var(--table-head-font-weight);

    // separator
    &::after {
      content: "";
      position: absolute;
      top: $table-spacing / 2 + 1;
      bottom: $table-spacing - 1;
      background: var(--table-border-color);
      width: var(--table-separator-width);
      right: 0;
    }

    &.resizable {
      --table-separator-width: 8px;

      &::after {
        background: linear-gradient(
                        to right,
                        transparent 3.5px,
                        var(--table-border-color) 3.5px,
                        var(--table-border-color) 4.5px,
                        transparent 4.5px
        );
        cursor: col-resize;
      }
    }

    // prevents resize with 'table-layout: auto'
    &:empty, &.columns-picker, &:has(> input[type="checkbox"]) {
      --table-not-resizable-cell: true; // just a marker
      width: var(--table-fit-content-col-width);
    }

    &.fit-content {
      width: var(--table-fit-content-col-width);
    }

    &.sortable:not(.sorted) {
      @include sortable-link($fa-var-sort);
    }

    &.sorted {
      font-weight: var(--table-head-sorted-font-weight);

      > a, > span > a {
        color: var(--table-head-sorted-color);
      }

      &.order1 { // desc
        @include sortable-link($fa-var-sort-down);
      }

      &.order2 { // asc
        @include sortable-link($fa-var-sort-up);
      }
    }

    .form-switch {
      display: inline-flex; // allows to display switch inside the table header
    }

    &.columns-picker {
      padding-top: $table-spacing / 2 - 1;
      padding-bottom: $table-spacing + 1;

      .icon-btn {
        font-size: $font-size-md;
      }

      .dropdown {
        @extend .flex-center;
      }
    }

    .icon-btn {
      font-size: inherit;
    }
  }

  .table-actions {
    div {
      @include flex-row($table-spacing);
      justify-content: end;
    }
  }

  // prevent hover effect from row with 'No records' message
  &.table-hover {
    tbody {
      tr:hover, tr.picked {
        &:not(.empty) {
          background: var(--table-hovered-bg);
          cursor: pointer;

          > * {
            color: $body-color-var;
          }
        }

        &.empty > * {
          --bs-table-accent-bg: initial;
          color: initial;
        }
      }
    }
  }

  &:not(.no-truncate) {
    .text-truncate-table, td > span:not(.table-badge) {
      @include text-truncate-lines;
    }
  }

  //            Row delimiters
  // ------------------------------------------
  @include desktop {
    &:not(.table--preview) {
      tr:not(:last-child) td {
        border-bottom: $table-border;
      }

      .table-row-wrapper:not(:last-child) {
        td {
          border-bottom: $table-border;
        }
      }
    }
  }

  @include mobile {
    &:not(.table--preview) {
      tr:not(:last-child) {
        border-bottom: $table-border;
      }

      .table-row-wrapper:not(:last-child) tr {
        border-bottom: $table-border;
      }
    }
  }
  // --------------------------------------------

  &:not(.table--preview) {
    .table-preview-visible {
      display: none;
    }
  }

  .form-check-input:not(:checked) {
    &:not(:indeterminate) {
      background-color: var(--table-checkbox-bg);
    }

    &:disabled {
      background-color: var(--base-disabled-bg);
    }
  }

  &:not(.table--visual-list) {
    .thumbnail-header-cell {
      display: none;
    }

    &:not(.table--preview) .thumbnail-cell {
      display: none;
    }
  }

  .icon-checkbox {
    color: $blue-var;
  }
}

.table-wrapper__header:empty + .table-wrapper__body .table--borderless {
  th {
    padding-top: 0;

    & + th::before {
      top: 0;
    }
  }
}

.table--preview {
  @include flex-table;

  tbody {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(#{$max-preview-width}, 1fr));
  }

  tr > td:has(input[type="checkbox"]) {
    @include flex-center;
  }

  .table-preview-visible {
    display: initial !important;
  }

  .table-preview-hidden {
    display: none !important;
  }

  .table-actions {
    order: 0;
    margin-left: auto;
  }
}

.secondary-cell > .icon {
  display: none;
}

.thumbnail-cell {
  --thumbnail-cell-icon-fs: 50px;

  text-align: center;

  justify-content: center;
  order: -1;

  img {
    @include max-size(min(100%, 100px), 150px);
  }

  @include mobile {
    width: 100%;

    img {
      @include max-size(100%, 200px);
    }
  }

  .table.table-layout-fixed & {
    img {
      max-width: 100%;
    }
  }

  i {
    font-size: var(--thumbnail-cell-icon-fs);
  }

  .table--preview & {
    --thumbnail-cell-icon-fs: 150px;
    width: 100%;
    height: 200px;

    img {
      @include max-size(100%, 200px);
    }
  }
}

.thumbnail-header-cell {
  @include mobile {
    display: none;
  }
}

.table-row-wrapper {
  display: contents;
}

tbody > tr.disabled {
  text-decoration: none;
  background-color: var(--base-disabled-bg);

  td {
    cursor: default;
  }

  .form-control {
    pointer-events: none;
    background-color: transparent;
  }
}

.table__btn {
  height: 22px;
  padding-inline: $gap-sm - 1px;
  gap: $gap-x-sm;
  --bs-btn-border-radius: #{$table-control-radius};
  --bs-btn-bg: var(--table-head-bg);
}

.table-layout-fixed {
  table-layout: fixed !important;
}
