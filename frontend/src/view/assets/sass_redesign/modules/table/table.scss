
$table-spacing: 10px;
$table-header-height: 34px;
$table-row-height: 56px;
$max-preview-width: 300px;
$table-control-radius: $border-radius-sm;

// separator between header elements
@mixin table-header-separator() {
  content: "";
  position: absolute;
  top: $table-spacing / 2 + 1;
  bottom: $table-spacing - 1;
  left: 0;
  width: 1px;
  background-color: var(--table-border-color);
}

@mixin table-text-truncation() {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin sortable-link($icon) {
  > a::before, > span > a::before {
    @include fa-content($icon);
    margin-right: $table-spacing / 2;
  }
}

@mixin flex-table() {
  @include flex-column;

  thead {
    tr {
      display: flex;
      justify-content: space-between;
    }

    th {
      flex-grow: 1;

      &.columns-picker {
        flex: none;
        padding-top: 7px;
        padding-bottom: 0;
      }
    }
  }

  tbody {
    tr {
      height: auto;
      @include flex-wrap;
      align-items: center;
      gap: $table-spacing / 2;
      row-gap: $table-spacing;

      padding: $table-spacing / 2 $table-spacing;
      overflow: hidden;

      &:not(.empty):hover {
        td {
          box-shadow: none;
        }
      }

      border-color: transparent;
    }

    tr.empty > td {
      width: 100%;
    }

    td {
      padding: 0;
      overflow: hidden;

      @include flex-row($table-spacing / 2);
      align-items: center;
    }
  }

  &:not(.no-truncate) {
    .fluid-cell {
      min-width: 0;
      flex: 1;

      span {
        display: inline !important;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }
  }

  &.no-truncate {
    .fluid-cell {
      order: 2;
      width: 100%;
    }
  }

  .table-actions {
    width: auto;

    div {
      gap: $table-spacing / 2;
    }
  }

  .secondary-cell {
    order: 2;
    width: 100%;
    color: var(--text-gray-color);

    > .icon {
      display: initial;
    }
  }
}

.table--borderless {
  table-layout: fixed;
  width: 100%;
  margin: 0;
  border-collapse: separate;
  border-spacing: 0;
  color: var(--text-color-default);

  tbody tr {
    height: $table-row-height;
  }

  @include mobile {
    @include flex-table;
  }

  thead {
    position: sticky;
    top: 0;
    z-index: 1;
  }

  td {
    color: var(--table-body-color);
    padding-block: $table-spacing / 2;
    padding-inline: $table-spacing;
    vertical-align: middle;
    border: none;
    overflow-wrap: anywhere;

    &:has(input[type="checkbox"]) {
      text-align: center;
    }

    @include mobile { // prevent table row click on mobile
      a {
        pointer-events: none;
        cursor: default;
      }
    }
  }

  th {
    @extend .text-truncate;
    position: relative;
    padding: $table-spacing / 2 $table-spacing $table-spacing $table-spacing;
    border: none;

    color: var(--table-head-text-color);
    font-weight: $font-weight-semibold;

    & + th::before {
      @include table-header-separator;
    }

    &.sortable:not(.sorted) {
      @include sortable-link($fa-var-sort);
    }

    &.sorted {
      > a {
        color: var(--table-sortable-color);
      }

      &.order1 { // desc
        @include sortable-link($fa-var-sort-down);
      }

      &.order2 { // asc
        @include sortable-link($fa-var-sort-up);
      }
    }

    .form-switch {
      display: inline-flex; // allows to display switch inside the table header
    }

    &:has(input[type="checkbox"]) {
      width: 35px;
      max-width: 35px;
    }

    &:has(.form-switch) {
      width: auto !important;
      max-width: none !important;
    }

    &.columns-picker {
      padding-top: $table-spacing / 2 - 1;
      padding-bottom: $table-spacing + 1;

      .icon-btn {
        font-size: $font-size-md;
      }

      .dropdown {
        @extend .flex-center;
      }
    }

    .icon-btn {
      font-size: inherit;
    }
  }

  .table-actions {
    div {
      @include flex-row($table-spacing);
      justify-content: end;
    }
  }

  // prevent hover effect from row with 'No records' message
  &.table-hover {
    tbody {
      tr:hover, tr.picked {
        &:not(.empty) {
          background: $table-hover-bg;
          cursor: pointer;

          > * {
            color: var(--text-color-default);
          }
        }

        &.empty > * {
          --bs-table-accent-bg: initial;
          color: initial;
        }
      }
    }
  }

  &:not(.no-truncate) {
    .text-truncate-table {
      @include table-text-truncation;
    }

    td > span:not(.table-badge) {
      @extend .text-truncate-table;
    }
  }

  //            Row delimiters
  // ------------------------------------------
  @include desktop {
    &:not(.table--preview) {
      tr:not(:last-child) td {
        border-bottom: $table-border;
      }

      .table-row-wrapper:not(:last-child) {
        td {
          border-bottom: $table-border;
        }
      }
    }
  }

  @include mobile {
    &:not(.table--preview) {
      tr:not(:last-child) {
        border-bottom: $table-border;
      }

      .table-row-wrapper:not(:last-child) tr {
        border-bottom: $table-border;
      }
    }
  }
  // --------------------------------------------

  &:not(.table--preview) {
    .table-preview-visible {
      display: none;
    }
  }

  .form-check-input:not(:checked) {
    &:not(:indeterminate) {
      background-color: var(--table-checkbox-bg-color);
    }

    &:disabled {
      background-color: var(--input-disabled-bg-color);
    }
  }

  &:not(.table--preview) {
    .thumbnail-cell {
      display: none;
    }
  }
}

.table-wrapper__header:empty + .table-wrapper__body .table--borderless {
  th {
    padding-top: 0;

    & + th::before {
      top: 0;
    }
  }
}

.table--preview {
  @include flex-table;

  tbody {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(#{$max-preview-width}, 1fr));
  }

  tr > td:has(input[type="checkbox"]) {
    @include flex-center;
  }

  .table-preview-visible {
    display: initial !important;
  }

  .table-preview-hidden {
    display: none !important;
  }

  .table-actions {
    order: 0;
    margin-left: auto;
  }
}

.secondary-cell > .icon {
  display: none;
}

.thumbnail-cell {
  order: -1;
  width: 100%;
  @extend .flex-center;
  height: 200px;

  img {
    max-width: $max-preview-width;
    max-height: 100%;
  }
}

.table-row-wrapper {
  display: contents;
}

tbody > tr.disabled {
  text-decoration: none;
  background-color: var(--input-disabled-bg-color);

  td {
    cursor: default;
  }

  .form-control {
    pointer-events: none;
    background-color: transparent;
  }
}

.table__btn {
  height: 22px;
  padding-inline: $gap-sm - 1px;
  gap: $gap-x-sm;
  --bs-btn-border-radius: #{$table-control-radius};
  --bs-btn-bg: var(--table-head-bg-color);
}
